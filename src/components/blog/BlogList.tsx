'use client';

import { useState } from 'react';
import Link from 'next/link';

const categories = [
  { id: 'all', name: 'T·∫•t c·∫£', count: 24 },
  { id: 'maintenance', name: 'B·∫£o d∆∞·ª°ng', count: 8 },
  { id: 'repair', name: 'S·ª≠a ch·ªØa', count: 6 },
  { id: 'tips', name: 'M·∫πo hay', count: 5 },
  { id: 'parts', name: 'Ph·ª• t√πng', count: 3 },
  { id: 'safety', name: 'An to√†n', count: 2 }
];

const blogPosts = [
  {
    id: 1,
    title: '10 C√°ch B·∫£o D∆∞·ª°ng Xe M√°y Hi·ªáu Qu·∫£ T·∫°i Nh√†',
    excerpt: 'Nh·ªØng m·∫πo b·∫£o d∆∞·ª°ng ƒë∆°n gi·∫£n m√† hi·ªáu qu·∫£ ƒë·ªÉ gi·ªØ xe m√°y lu√¥n trong t√¨nh tr·∫°ng t·ªët nh·∫•t.',
    category: 'maintenance',
    categoryName: 'B·∫£o d∆∞·ª°ng',
    author: 'Th·∫ßy Minh',
    date: '2024-01-15',
    readTime: '5 ph√∫t ƒë·ªçc',
    image: '/images/blog/maintenance-tips.jpg',
    tags: ['b·∫£o d∆∞·ª°ng', 'xe m√°y', 't·ª± l√†m'],
    featured: true
  },
  {
    id: 2,
    title: 'D·∫•u Hi·ªáu Nh·∫≠n Bi·∫øt Xe M√°y C·∫ßn Thay Nh·ªõt',
    excerpt: 'C√°ch nh·∫≠n bi·∫øt khi n√†o c·∫ßn thay nh·ªõt ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·ªông c∆° xe m√°y ho·∫°t ƒë·ªông tr∆°n tru.',
    category: 'maintenance',
    categoryName: 'B·∫£o d∆∞·ª°ng',
    author: 'Th·∫ßy H√πng',
    date: '2024-01-12',
    readTime: '3 ph√∫t ƒë·ªçc',
    image: '/images/blog/oil-change.jpg',
    tags: ['nh·ªõt m√°y', 'ƒë·ªông c∆°', 'b·∫£o d∆∞·ª°ng']
  },
  {
    id: 3,
    title: 'C√°ch S·ª≠a Xe M√°y Kh√¥ng N·ªï - Nguy√™n Nh√¢n & Gi·∫£i Ph√°p',
    excerpt: 'Ph√¢n t√≠ch c√°c nguy√™n nh√¢n ph·ªï bi·∫øn khi·∫øn xe m√°y kh√¥ng n·ªï v√† c√°ch kh·∫Øc ph·ª•c hi·ªáu qu·∫£.',
    category: 'repair',
    categoryName: 'S·ª≠a ch·ªØa',
    author: 'Th·∫ßy Nam',
    date: '2024-01-10',
    readTime: '7 ph√∫t ƒë·ªçc',
    image: '/images/blog/engine-repair.jpg',
    tags: ['s·ª≠a ch·ªØa', 'ƒë·ªông c∆°', 'kh√¥ng n·ªï']
  },
  {
    id: 4,
    title: 'M·∫πo Ti·∫øt Ki·ªám XƒÉng Cho Xe M√°y Trong M√πa Cao ƒêi·ªÉm',
    excerpt: 'Nh·ªØng m·∫πo hay gi√∫p b·∫°n ti·∫øt ki·ªám xƒÉng hi·ªáu qu·∫£ khi di chuy·ªÉn trong th√†nh ph·ªë.',
    category: 'tips',
    categoryName: 'M·∫πo hay',
    author: 'Th·∫ßy T√πng',
    date: '2024-01-08',
    readTime: '4 ph√∫t ƒë·ªçc',
    image: '/images/blog/fuel-saving.jpg',
    tags: ['ti·∫øt ki·ªám xƒÉng', 'm·∫πo hay', 'kinh t·∫ø']
  },
  {
    id: 5,
    title: 'H∆∞·ªõng D·∫´n Ch·ªçn Mua Ph·ª• T√πng Xe M√°y Ch√≠nh H√£ng',
    excerpt: 'C√°ch nh·∫≠n bi·∫øt v√† l·ª±a ch·ªçn ph·ª• t√πng ch√≠nh h√£ng ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng v√† ƒë·ªô b·ªÅn.',
    category: 'parts',
    categoryName: 'Ph·ª• t√πng',
    author: 'Th·∫ßy Minh',
    date: '2024-01-05',
    readTime: '6 ph√∫t ƒë·ªçc',
    image: '/images/blog/genuine-parts.jpg',
    tags: ['ph·ª• t√πng', 'ch√≠nh h√£ng', 'ch·ªçn mua']
  },
  {
    id: 6,
    title: 'An To√†n Giao Th√¥ng: Ki·ªÉm Tra Phanh Xe M√°y',
    excerpt: 'T·∫ßm quan tr·ªçng c·ªßa h·ªá th·ªëng phanh v√† c√°ch ki·ªÉm tra ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n khi l√°i xe.',
    category: 'safety',
    categoryName: 'An to√†n',
    author: 'Th·∫ßy H√πng',
    date: '2024-01-03',
    readTime: '5 ph√∫t ƒë·ªçc',
    image: '/images/blog/brake-safety.jpg',
    tags: ['an to√†n', 'phanh xe', 'ki·ªÉm tra']
  }
];

const SearchIcon = () => (
  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
  </svg>
);

const CalendarIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
  </svg>
);

const ClockIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
  </svg>
);

const UserIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
  </svg>
);

const ArrowRightIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
  </svg>
);

export default function BlogList() {
  const [activeCategory, setActiveCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');

  const filteredPosts = blogPosts.filter(post => {
    const matchesCategory = activeCategory === 'all' || post.category === activeCategory;
    const matchesSearch = post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    return matchesCategory && matchesSearch;
  });

  const featuredPost = blogPosts.find(post => post.featured);

  return (
    <div className="space-y-8">
      {/* Search & Filter */}
      <div className="bg-white rounded-xl p-6 shadow-sm border border-gray-200">
        {/* Search */}
        <div className="relative mb-6">
          <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <SearchIcon />
          </div>
          <input
            type="text"
            placeholder="T√¨m ki·∫øm b√†i vi·∫øt..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="block w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
          />
        </div>

        {/* Categories */}
        <div className="flex flex-wrap gap-3">
          {categories.map((category) => (
            <button
              key={category.id}
              onClick={() => setActiveCategory(category.id)}
              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-200 ${
                activeCategory === category.id
                  ? 'bg-primary-500 text-white'
                  : 'bg-gray-100 text-gray-700 hover:bg-primary-100 hover:text-primary-700'
              }`}
            >
              {category.name} ({category.count})
            </button>
          ))}
        </div>
      </div>

      {/* Featured Post */}
      {featuredPost && activeCategory === 'all' && !searchQuery && (
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
          <div className="md:flex">
            <div className="md:w-1/2">
              <div className="h-64 md:h-full bg-gradient-to-br from-primary-100 to-primary-200 flex items-center justify-center">
                <div className="text-center text-primary-600">
                  <div className="text-6xl mb-4">üì∞</div>
                  <p className="font-semibold">B√†i vi·∫øt n·ªïi b·∫≠t</p>
                </div>
              </div>
            </div>
            <div className="md:w-1/2 p-6 md:p-8">
              <div className="mb-4">
                <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                  ‚≠ê N·ªïi b·∫≠t
                </span>
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                <Link href={`/blog/${featuredPost.id}`} className="hover:text-primary-600 transition-colors duration-200">
                  {featuredPost.title}
                </Link>
              </h2>
              <p className="text-gray-600 mb-6 leading-relaxed">
                {featuredPost.excerpt}
              </p>
              <div className="flex items-center space-x-4 text-sm text-gray-500 mb-6">
                <div className="flex items-center space-x-1">
                  <UserIcon />
                  <span>{featuredPost.author}</span>
                </div>
                <div className="flex items-center space-x-1">
                  <CalendarIcon />
                  <span>{new Date(featuredPost.date).toLocaleDateString('vi-VN')}</span>
                </div>
                <div className="flex items-center space-x-1">
                  <ClockIcon />
                  <span>{featuredPost.readTime}</span>
                </div>
              </div>
              <Link
                href={`/blog/${featuredPost.id}`}
                className="inline-flex items-center space-x-2 text-primary-600 hover:text-primary-700 font-medium transition-colors duration-200"
              >
                <span>ƒê·ªçc ti·∫øp</span>
                <ArrowRightIcon />
              </Link>
            </div>
          </div>
        </div>
      )}

      {/* Blog Posts Grid */}
      <div className="grid md:grid-cols-2 gap-6">
        {filteredPosts.map((post) => (
          <article key={post.id} className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow duration-200 group">
            {/* Image */}
            <div className="h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
              <div className="text-center text-gray-500">
                <div className="text-4xl mb-2">üìÑ</div>
                <p className="text-sm">H√¨nh ·∫£nh b√†i vi·∫øt</p>
              </div>
            </div>

            {/* Content */}
            <div className="p-6">
              {/* Category */}
              <div className="mb-3">
                <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                  {post.categoryName}
                </span>
              </div>

              {/* Title */}
              <h3 className="text-lg font-bold text-gray-900 mb-3 leading-tight">
                <Link href={`/blog/${post.id}`} className="hover:text-primary-600 transition-colors duration-200">
                  {post.title}
                </Link>
              </h3>

              {/* Excerpt */}
              <p className="text-gray-600 mb-4 text-sm leading-relaxed">
                {post.excerpt}
              </p>

              {/* Meta */}
              <div className="flex items-center justify-between text-xs text-gray-500">
                <div className="flex items-center space-x-3">
                  <div className="flex items-center space-x-1">
                    <UserIcon />
                    <span>{post.author}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <CalendarIcon />
                    <span>{new Date(post.date).toLocaleDateString('vi-VN')}</span>
                  </div>
                </div>
                <div className="flex items-center space-x-1">
                  <ClockIcon />
                  <span>{post.readTime}</span>
                </div>
              </div>

              {/* Tags */}
              <div className="flex flex-wrap gap-2 mt-4">
                {post.tags.slice(0, 3).map((tag, index) => (
                  <span key={index} className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          </article>
        ))}
      </div>

      {/* No Results */}
      {filteredPosts.length === 0 && (
        <div className="text-center py-12">
          <div className="text-gray-400 text-6xl mb-4">üîç</div>
          <h3 className="text-xl font-semibold text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt</h3>
          <p className="text-gray-600">Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c.</p>
        </div>
      )}

      {/* Pagination */}
      {filteredPosts.length > 0 && (
        <div className="flex justify-center">
          <div className="flex items-center space-x-2">
            <button className="px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
              Trang tr∆∞·ªõc
            </button>
            <button className="px-4 py-2 text-sm font-medium text-white bg-primary-500 rounded-lg">
              1
            </button>
            <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
              2
            </button>
            <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
              3
            </button>
            <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
              Trang sau
            </button>
          </div>
        </div>
      )}
    </div>
  );
}