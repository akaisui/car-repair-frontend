'use client';

import { useState, useEffect } from 'react';

const reviews = [
  {
    id: 1,
    name: 'Nguy·ªÖn VƒÉn A',
    location: 'Qu·∫≠n 1, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-1.jpg',
    review:
      'D·ªãch v·ª• r·∫•t chuy√™n nghi·ªáp, th·ª£ s·ª≠a nhanh v√† ch√≠nh x√°c. Xe Honda Winner c·ªßa t√¥i ch·∫°y √™m h∆°n h·∫≥n sau khi b·∫£o d∆∞·ª°ng ·ªü ƒë√¢y. Gi√° c·∫£ h·ª£p l√Ω, s·∫Ω quay l·∫°i l·∫ßn sau.',
    service: 'B·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥',
    date: '2 tu·∫ßn tr∆∞·ªõc',
    verified: true,
  },
  {
    id: 2,
    name: 'Tr·∫ßn Th·ªã B',
    location: 'Qu·∫≠n 3, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-2.jpg',
    review:
      'Ti·ªám s·ª≠a r·∫•t uy t√≠n, nh√¢n vi√™n t∆∞ v·∫•n nhi·ªát t√¨nh. Xe Yamaha Sirius c·ªßa t√¥i b·ªã h·ªèng bugi, ƒë∆∞·ª£c s·ª≠a xong ch·ªâ trong 30 ph√∫t. R·∫•t h√†i l√≤ng v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª•.',
    service: 'S·ª≠a ch·ªØa ƒëi·ªán',
    date: '1 tu·∫ßn tr∆∞·ªõc',
    verified: true,
  },
  {
    id: 3,
    name: 'L√™ VƒÉn C',
    location: 'Qu·∫≠n 7, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-3.jpg',
    review:
      'Thay nh·ªõt cho xe Wave c·ªßa t√¥i, d√πng nh·ªõt ch√≠nh h√£ng Castrol. Anh th·ª£ l√†m vi·ªác r·∫•t c·∫©n th·∫≠n, ki·ªÉm tra k·ªπ t·ª´ng b·ªô ph·∫≠n. Gi√° th√†nh r·∫ª h∆°n so v·ªõi nhi·ªÅu n∆°i kh√°c.',
    service: 'Thay nh·ªõt',
    date: '3 ng√†y tr∆∞·ªõc',
    verified: true,
  },
  {
    id: 4,
    name: 'Ph·∫°m Th·ªã D',
    location: 'Qu·∫≠n 10, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-4.jpg',
    review:
      'S·ª≠a phanh cho xe Air Blade, c√¥ng vi·ªác ƒë∆∞·ª£c th·ª±c hi·ªán r·∫•t nhanh ch√≥ng v√† chuy√™n nghi·ªáp. Nh√¢n vi√™n gi·∫£i th√≠ch r√µ r√†ng v·ªÅ t√¨nh tr·∫°ng xe v√† c√°c b∆∞·ªõc s·ª≠a ch·ªØa.',
    service: 'S·ª≠a phanh',
    date: '1 th√°ng tr∆∞·ªõc',
    verified: true,
  },
  {
    id: 5,
    name: 'V√µ VƒÉn E',
    location: 'Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-5.jpg',
    review:
      'V√° l·ªëp xe m√°y, gi√° r·∫ª v√† l√†m r·∫•t ch·∫Øc ch·∫Øn. ƒê√£ 3 th√°ng r·ªìi v·∫´n ch∆∞a b·ªã th·ªßng l·∫°i. Anh th·ª£ l√†m vi·ªác t·ªâ m·ªâ, ki·ªÉm tra k·ªπ l∆∞·ª°ng tr∆∞·ªõc khi giao xe.',
    service: 'V√° l·ªëp',
    date: '3 th√°ng tr∆∞·ªõc',
    verified: true,
  },
  {
    id: 6,
    name: 'Nguy·ªÖn Th·ªã F',
    location: 'Qu·∫≠n T√¢n B√¨nh, TP.HCM',
    rating: 5,
    avatar: '/images/avatars/customer-6.jpg',
    review:
      'C·∫£m ∆°n ti·ªám ƒë√£ s·ª≠a xe SH c·ªßa t√¥i. D·ªãch v·ª• t·∫≠n t√¢m, gi√° c·∫£ minh b·∫°ch. ƒê·∫∑c bi·ªát th√≠ch c√°ch nh√¢n vi√™n t∆∞ v·∫•n r·∫•t ch√¢n th√†nh, kh√¥ng √©p kh√°ch mua ph·ª• t√πng kh√¥ng c·∫ßn thi·∫øt.',
    service: 'S·ª≠a ch·ªØa t·ªïng qu√°t',
    date: '2 th√°ng tr∆∞·ªõc',
    verified: true,
  },
];

const StarIcon = ({ filled }: { filled: boolean }) => (
  <svg
    className={`w-4 h-4 ${filled ? 'fill-current text-yellow-400' : 'text-gray-300'}`}
    viewBox="0 0 24 24"
  >
    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
  </svg>
);

const VerifiedIcon = () => (
  <svg className="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 24 24">
    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" />
  </svg>
);

const QuoteIcon = () => (
  <svg className="w-8 h-8 text-primary-200" fill="currentColor" viewBox="0 0 24 24">
    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z" />
  </svg>
);

interface ReviewCardProps {
  review: (typeof reviews)[0];
  isActive: boolean;
}

function ReviewCard({ review, isActive }: ReviewCardProps) {
  return (
    <div
      className={`bg-white rounded-xl p-6 shadow-lg border border-gray-100 transition-all duration-300 ${
        isActive ? 'scale-105 shadow-xl' : ''
      }`}
    >
      {/* Quote Icon */}
      <div className="relative">
        <QuoteIcon />
      </div>

      {/* Review Content */}
      <div className="mt-4 mb-6">
        <p className="text-gray-700 leading-relaxed text-sm md:text-base">"{review.review}"</p>
      </div>

      {/* Service & Date */}
      <div className="flex items-center justify-between mb-4">
        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-700">
          {review.service}
        </span>
        <span className="text-xs text-gray-500">{review.date}</span>
      </div>

      {/* Rating */}
      <div className="flex items-center space-x-1 mb-4">
        {[...Array(5)].map((_, index) => (
          <StarIcon key={index} filled={index < review.rating} />
        ))}
        <span className="text-sm text-gray-600 ml-2">({review.rating}/5)</span>
      </div>

      {/* Customer Info */}
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-3">
          <div className="w-10 h-10 bg-gradient-to-br from-primary-400 to-primary-600 rounded-full flex items-center justify-center text-white font-semibold text-sm">
            {review.name.charAt(0)}
          </div>
          <div>
            <div className="flex items-center space-x-1">
              <h4 className="font-semibold text-gray-900 text-sm">{review.name}</h4>
              {review.verified && <VerifiedIcon />}
            </div>
            <p className="text-xs text-gray-500">{review.location}</p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default function CustomerReviews() {
  const [activeReview, setActiveReview] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);

  // Auto-rotate reviews
  useEffect(() => {
    if (!isAutoPlaying) return;

    const interval = setInterval(() => {
      setActiveReview((prev) => (prev + 1) % reviews.length);
    }, 4000);

    return () => clearInterval(interval);
  }, [isAutoPlaying]);

  const goToReview = (index: number) => {
    setActiveReview(index);
    setIsAutoPlaying(false);
    // Resume auto-play after 10 seconds
    setTimeout(() => setIsAutoPlaying(true), 10000);
  };

  const visibleReviews = [
    reviews[activeReview],
    reviews[(activeReview + 1) % reviews.length],
    reviews[(activeReview + 2) % reviews.length],
  ];

  return (
    <section className="section bg-gradient-to-br p-6 from-gray-50 to-white">
      <div className="container-7xl">
        {/* Section Header */}
        <div className="text-center max-w-3xl mx-auto mb-16">
          <div className="inline-flex items-center space-x-2 bg-success-100 text-success-700 px-4 py-2 rounded-full text-sm font-medium mb-4">
            <span>üí¨</span>
            <span>Kh√°ch h√†ng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i</span>
          </div>

          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            ƒê√°nh Gi√° T·ª´
            <span className="text-primary-600"> Kh√°ch H√†ng Th·ª±c</span>
          </h2>

          <p className="text-lg text-gray-600 leading-relaxed">
            H∆°n 2000 kh√°ch h√†ng ƒë√£ tin t∆∞·ªüng v√† h√†i l√≤ng v·ªõi d·ªãch v·ª• c·ªßa ch√∫ng t√¥i. H√£y xem nh·ªØng
            chia s·∫ª ch√¢n th·ª±c t·ª´ h·ªç.
          </p>
        </div>

        {/* Reviews Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
          {visibleReviews.map((review, index) => (
            <ReviewCard key={review.id} review={review} isActive={index === 0} />
          ))}
        </div>

        {/* Navigation Dots */}
        <div className="flex justify-center space-x-2 mb-12">
          {reviews.map((_, index) => (
            <button
              key={index}
              onClick={() => goToReview(index)}
              className={`w-3 h-3 rounded-full transition-all duration-300 ${
                index === activeReview
                  ? 'bg-primary-600 scale-125'
                  : 'bg-gray-300 hover:bg-gray-400'
              }`}
              aria-label={`Go to review ${index + 1}`}
            />
          ))}
        </div>

        {/* Overall Rating Summary */}
        <div className="bg-white rounded-2xl p-8 md:p-12 shadow-lg">
          <div className="grid md:grid-cols-2 gap-8 items-center">
            <div>
              <h3 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
                T·ªïng quan ƒë√°nh gi√°
              </h3>

              <div className="space-y-4">
                <div className="flex items-center space-x-4">
                  <div className="text-4xl font-bold text-primary-600">4.9</div>
                  <div>
                    <div className="flex space-x-1 mb-1">
                      {[...Array(5)].map((_, index) => (
                        <StarIcon key={index} filled={index < 5} />
                      ))}
                    </div>
                    <p className="text-sm text-gray-600">D·ª±a tr√™n 2000+ ƒë√°nh gi√°</p>
                  </div>
                </div>

                <div className="space-y-2">
                  {[
                    { stars: 5, percentage: 85 },
                    { stars: 4, percentage: 12 },
                    { stars: 3, percentage: 2 },
                    { stars: 2, percentage: 1 },
                    { stars: 1, percentage: 0 },
                  ].map(({ stars, percentage }) => (
                    <div key={stars} className="flex items-center space-x-3">
                      <span className="text-sm text-gray-600 w-8">{stars} ‚≠ê</span>
                      <div className="flex-1 bg-gray-200 rounded-full h-2">
                        <div
                          className="bg-yellow-400 h-2 rounded-full transition-all duration-500"
                          style={{ width: `${percentage}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 w-12">{percentage}%</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-6">
              <div className="text-center p-6 bg-primary-50 rounded-lg">
                <div className="text-2xl font-bold text-primary-600 mb-1">98%</div>
                <div className="text-sm text-gray-600">Kh√°ch h√†ng h√†i l√≤ng</div>
              </div>
              <div className="text-center p-6 bg-success-50 rounded-lg">
                <div className="text-2xl font-bold text-success-600 mb-1">95%</div>
                <div className="text-sm text-gray-600">Quay l·∫°i l·∫ßn 2</div>
              </div>
              <div className="text-center p-6 bg-secondary-50 rounded-lg">
                <div className="text-2xl font-bold text-secondary-600 mb-1">4.8</div>
                <div className="text-sm text-gray-600">ƒê√°nh gi√° Google</div>
              </div>
              <div className="text-center p-6 bg-purple-50 rounded-lg">
                <div className="text-2xl font-bold text-purple-600 mb-1">100%</div>
                <div className="text-sm text-gray-600">ƒê√°nh gi√° 5 sao Facebook</div>
              </div>
            </div>
          </div>

          <div className="text-center mt-8 pt-8 border-t border-gray-200">
            <h4 className="text-lg font-semibold text-gray-900 mb-4">
              B·∫°n c≈©ng mu·ªën chia s·∫ª tr·∫£i nghi·ªám?
            </h4>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <a href="/book-appointment" className="btn btn-primary">
                ƒê·∫∑t l·ªãch tr·∫£i nghi·ªám
              </a>
              <a
                href="https://www.google.com/search?q=ti·ªám+s·ª≠a+xe+m√°y+abc"
                target="_blank"
                rel="noopener noreferrer"
                className="btn btn-outline"
              >
                ƒê√°nh gi√° tr√™n Google
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
