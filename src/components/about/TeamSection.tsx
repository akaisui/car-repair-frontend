'use client';

import { useState } from 'react';
import Image from 'next/image';

const teamMembers = [
  {
    id: 1,
    name: 'Nguy·ªÖn VƒÉn H·∫≠u',
    position: 'Ch·ªß ti·ªám & Th·ª£ tr∆∞·ªüng',
    experience: '10 nƒÉm',
    speciality: 'S·ª≠a ch·ªØa t·ªïng qu√°t, ƒêi·ªán',
    avatar: '/images/member/hau.jpg',
    description:
      'Ng∆∞·ªùi s√°ng l·∫≠p ti·ªám v·ªõi h∆°n 10 nƒÉm kinh nghi·ªám. Chuy√™n gia v·ªÅ h·ªá th·ªëng ƒëi·ªán v√† s·ª≠a ch·ªØa t·ªïng qu√°t.',
    achievements: [
      'Ch·ª©ng ch·ªâ K·ªπ thu·∫≠t vi√™n Honda',
      'Ch·ª©ng ch·ªâ K·ªπ thu·∫≠t vi√™n Yamaha',
      '10+ nƒÉm kinh nghi·ªám',
      'ƒê√£ s·ª≠a h∆°n 1000 xe',
    ],
    quote: 'Ch·∫•t l∆∞·ª£ng kh√¥ng ph·∫£i l√† m·ªôt h√†nh ƒë·ªông, m√† l√† m·ªôt th√≥i quen.',
    social: {
      phone: '0901234567',
      email: 'owner@suaxemay.com',
    },
  },
  {
    id: 2,
    name: 'Nguy·ªÖn VƒÉn Trung Ki√™n',
    position: 'Th·ª£ ch√≠nh - ƒê·ªông c∆°',
    experience: '5 nƒÉm',
    speciality: 'ƒê·ªông c∆°, H·ªôp s·ªë',
    avatar: '/images/member/kien.jpg',
    description:
      'Chuy√™n gia v·ªÅ ƒë·ªông c∆° v√† h·ªôp s·ªë v·ªõi kh·∫£ nƒÉng ch·∫©n ƒëo√°n ch√≠nh x√°c c√°c h∆∞ h·ªèng ph·ª©c t·∫°p.',
    achievements: [
      'Ch·ª©ng ch·ªâ Suzuki Technical',
      'Chuy√™n gia ƒë·ªông c∆° 4 th√¨',
      'ƒê√†o t·∫°o t·∫°i Nh·∫≠t B·∫£n',
      '1000+ ƒë·ªông c∆° ƒë√£ s·ª≠a',
    ],
    quote: 'M·ªói ƒë·ªông c∆° ƒë·ªÅu c√≥ c√¢u chuy·ªán ri√™ng, nhi·ªám v·ª• c·ªßa t√¥i l√† l·∫Øng nghe.',
    social: {
      phone: '0901234568',
    },
  },
  {
    id: 3,
    name: 'Nguy·ªÖn VƒÉn Kh·ªüi',
    position: 'Th·ª£ ch√≠nh - Phanh & Treo',
    experience: '8 nƒÉm',
    speciality: 'Phanh, H·ªá th·ªëng treo',
    avatar: '/images/team/member-3.jpg',
    description: 'Chuy√™n v·ªÅ h·ªá th·ªëng phanh v√† treo, ƒë·∫£m b·∫£o an to√†n tuy·ªát ƒë·ªëi cho kh√°ch h√†ng.',
    achievements: [
      'Ch·ª©ng ch·ªâ An to√†n giao th√¥ng',
      'Chuy√™n gia phanh ABS',
      'K·ªπ thu·∫≠t vi√™n Piaggio',
      'Th√†nh vi√™n Hi·ªáp h·ªôi Th·ª£ m√°y VN',
    ],
    quote: 'An to√†n c·ªßa kh√°ch h√†ng l√† ∆∞u ti√™n h√†ng ƒë·∫ßu trong m·ªçi c√¥ng vi·ªác.',
    social: {
      phone: '0901234569',
    },
  },
  {
    id: 4,
    name: 'Nguy·ªÖn Th·ªã H·ªìng',
    position: 'Nh√¢n vi√™n t∆∞ v·∫•n',
    experience: '4 nƒÉm',
    speciality: 'T∆∞ v·∫•n, ChƒÉm s√≥c KH',
    avatar: '/images/team/member-6.jpg',
    description: 'Chuy√™n vi√™n t∆∞ v·∫•n v√† chƒÉm s√≥c kh√°ch h√†ng v·ªõi th√°i ƒë·ªô nhi·ªát t√¨nh, chu ƒë√°o.',
    achievements: [
      'C·ª≠ nh√¢n Kinh doanh',
      'Ch·ª©ng ch·ªâ D·ªãch v·ª• kh√°ch h√†ng',
      'Gi·∫£i th∆∞·ªüng Nh√¢n vi√™n xu·∫•t s·∫Øc',
      'T·ª∑ l·ªá h√†i l√≤ng KH 98%',
    ],
    quote: 'N·ª• c∆∞·ªùi v√† s·ª± t·∫≠n t√¢m l√† ch√¨a kh√≥a ƒë·ªÉ chinh ph·ª•c kh√°ch h√†ng.',
    social: {
      phone: '0901234572',
      email: 'tuvan@suaxemay.com',
    },
  },
];

const departments = [
  {
    name: 'B·ªô ph·∫≠n K·ªπ thu·∫≠t',
    members: 3,
    description: 'ƒê·ªôi ng≈© th·ª£ gi√†u kinh nghi·ªám, chuy√™n m√¥n cao',
    icon: 'üîß',
  },
  {
    name: 'B·ªô ph·∫≠n T∆∞ v·∫•n',
    members: 1,
    description: 'H·ªó tr·ª£ kh√°ch h√†ng v√† t∆∞ v·∫•n d·ªãch v·ª•',
    icon: 'üí¨',
  },
  {
    name: 'B·ªô ph·∫≠n Qu·∫£n l√Ω',
    members: 1,
    description: 'ƒêi·ªÅu h√†nh v√† qu·∫£n l√Ω ho·∫°t ƒë·ªông ti·ªám',
    icon: 'üëî',
  },
];

const PhoneIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
    />
  </svg>
);

const EmailIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
    />
  </svg>
);

const AwardIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"
    />
  </svg>
);

const QuoteIcon = () => (
  <svg className="w-6 h-6 text-primary-300" fill="currentColor" viewBox="0 0 24 24">
    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z" />
  </svg>
);

export default function TeamSection() {
  const [selectedMember, setSelectedMember] = useState<number | null>(null);
  const [imageErrors, setImageErrors] = useState<Set<number>>(new Set());

  return (
    <section className="section bg-white p-6">
      <div className="container-7xl">
        {/* Section Header */}
        <div className="text-center max-w-3xl mx-auto mb-16">
          <div className="inline-flex items-center space-x-2 bg-primary-100 text-primary-700 px-4 py-2 rounded-full text-sm font-medium mb-4">
            <span>üë•</span>
            <span>ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i</span>
          </div>

          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            G·∫∑p G·ª°
            <span className="text-primary-600"> ƒê·ªôi Ng≈© Chuy√™n Nghi·ªáp</span>
          </h2>

          <p className="text-lg text-gray-600 leading-relaxed">
            ƒê·ªôi ng≈© th·ª£ gi√†u kinh nghi·ªám v√† nhi·ªát huy·∫øt, lu√¥n s·∫µn s√†ng mang ƒë·∫øn d·ªãch v·ª• t·ªët nh·∫•t cho
            xe m√°y c·ªßa b·∫°n.
          </p>
        </div>

        {/* Department Overview */}
        <div className="grid md:grid-cols-3 gap-6 mb-16">
          {departments.map((dept, index) => (
            <div
              key={index}
              className="bg-gray-50 rounded-xl p-6 text-center hover:bg-primary-50 transition-colors duration-200"
            >
              <div className="text-4xl mb-4">{dept.icon}</div>
              <h3 className="font-bold text-gray-900 mb-2">{dept.name}</h3>
              <p className="text-gray-600 text-sm mb-3">{dept.description}</p>
              <div className="text-2xl font-bold text-primary-600">{dept.members}</div>
              <div className="text-xs text-gray-500">th√†nh vi√™n</div>
            </div>
          ))}
        </div>

        {/* Team Members Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
          {teamMembers.map((member) => (
            <div
              key={member.id}
              className={`bg-white rounded-2xl p-6 shadow-sm border border-gray-200 hover:shadow-lg transition-all duration-300 cursor-pointer ${
                selectedMember === member.id ? 'ring-2 ring-primary-500 shadow-lg' : ''
              }`}
              onClick={() => setSelectedMember(selectedMember === member.id ? null : member.id)}
            >
              {/* Avatar */}
              <div className="relative mb-6">
                {imageErrors.has(member.id) ? (
                  // Fallback avatar with initials
                  <div className="w-24 h-24 rounded-full mx-auto bg-gradient-to-br from-primary-400 to-primary-600 flex items-center justify-center text-white text-2xl font-bold border-4 border-white shadow-lg">
                    {member.name.split(' ').pop()?.charAt(0)}
                  </div>
                ) : (
                  // Actual image avatar
                  <div className="w-24 h-24 rounded-full mx-auto overflow-hidden bg-gray-100 border-4 border-white shadow-lg relative">
                    <Image
                      src={member.avatar}
                      alt={`${member.name} - ${member.position}`}
                      fill
                      className="object-cover"
                      sizes="96px"
                      onError={() => {
                        setImageErrors((prev) => new Set([...prev, member.id]));
                      }}
                    />
                  </div>
                )}
                <div className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 bg-white border-2 border-gray-200 rounded-full px-3 py-1">
                  <span className="text-xs font-medium text-gray-600">{member.experience}</span>
                </div>
              </div>

              {/* Basic Info */}
              <div className="text-center mb-4">
                <h3 className="text-lg font-bold text-gray-900 mb-1">{member.name}</h3>
                <p className="text-primary-600 font-medium text-sm mb-2">{member.position}</p>
                <p className="text-gray-600 text-sm">{member.speciality}</p>
              </div>

              {/* Description */}
              <p className="text-gray-600 text-sm text-center mb-4 leading-relaxed">
                {member.description}
              </p>

              {/* Expandable Details */}
              <div
                className={`transition-all duration-300 overflow-hidden ${
                  selectedMember === member.id ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'
                }`}
              >
                <div className="border-t border-gray-200 pt-4 space-y-4">
                  {/* Achievements */}
                  <div>
                    <h4 className="font-semibold text-gray-900 mb-2 text-sm flex items-center space-x-2">
                      <AwardIcon />
                      <span>Th√†nh t·ª±u</span>
                    </h4>
                    <div className="space-y-1">
                      {member.achievements.map((achievement, index) => (
                        <div
                          key={index}
                          className="text-xs text-gray-600 flex items-center space-x-2"
                        >
                          <span className="w-1 h-1 bg-primary-500 rounded-full"></span>
                          <span>{achievement}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Quote */}
                  <div className="bg-primary-50 rounded-lg p-3">
                    <QuoteIcon />
                    <p className="text-sm text-primary-800 italic mt-2">"{member.quote}"</p>
                  </div>

                  {/* Contact */}
                  <div className="flex justify-center space-x-4">
                    {member.social.phone && (
                      <a
                        href={`tel:${member.social.phone}`}
                        className="flex items-center space-x-1 text-xs text-gray-600 hover:text-primary-600 transition-colors duration-200"
                      >
                        <PhoneIcon />
                        <span>G·ªçi</span>
                      </a>
                    )}
                    {member.social.email && (
                      <a
                        href={`mailto:${member.social.email}`}
                        className="flex items-center space-x-1 text-xs text-gray-600 hover:text-primary-600 transition-colors duration-200"
                      >
                        <EmailIcon />
                        <span>Email</span>
                      </a>
                    )}
                  </div>
                </div>
              </div>

              {/* Click indicator */}
              <div className="text-center mt-4">
                <span className="text-xs text-gray-400">
                  {selectedMember === member.id ? 'Nh·∫•n ƒë·ªÉ thu g·ªçn' : 'Nh·∫•n ƒë·ªÉ xem th√™m'}
                </span>
              </div>
            </div>
          ))}
        </div>

        {/* Team Stats */}
        <div className="bg-gradient-to-br from-primary-500 to-primary-600 rounded-2xl p-8 md:p-12 text-white">
          <div className="text-center mb-8">
            <h3 className="text-2xl font-bold mb-4">ƒê·ªôi ng≈© theo s·ªë li·ªáu</h3>
            <p className="text-primary-100 max-w-2xl mx-auto">
              Nh·ªØng con s·ªë ·∫•n t∆∞·ª£ng v·ªÅ ƒë·ªôi ng≈© nh√¢n vi√™n c·ªßa ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid md:grid-cols-4 gap-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-secondary-400 mb-2">15</div>
              <div className="text-sm text-primary-100">Nh√¢n vi√™n</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-secondary-400 mb-2">96</div>
              <div className="text-sm text-primary-100">NƒÉm kinh nghi·ªám t·ªïng</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-secondary-400 mb-2">25+</div>
              <div className="text-sm text-primary-100">Ch·ª©ng ch·ªâ chuy√™n m√¥n</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-secondary-400 mb-2">100%</div>
              <div className="text-sm text-primary-100">T·ª∑ l·ªá gi·ªØ ch√¢n nh√¢n vi√™n</div>
            </div>
          </div>

          <div className="mt-8 pt-8 border-t border-white/20 text-center">
            <h4 className="font-semibold mb-4">M√¥i tr∆∞·ªùng l√†m vi·ªác</h4>
            <div className="grid md:grid-cols-3 gap-4 text-sm">
              <div className="flex items-center justify-center space-x-2">
                <span>üéØ</span>
                <span>ƒê√†o t·∫°o th∆∞·ªùng xuy√™n</span>
              </div>
              <div className="flex items-center justify-center space-x-2">
                <span>ü§ù</span>
                <span>L√†m vi·ªác nh√≥m hi·ªáu qu·∫£</span>
              </div>
              <div className="flex items-center justify-center space-x-2">
                <span>üèÜ</span>
                <span>Khen th∆∞·ªüng x·ª©ng ƒë√°ng</span>
              </div>
            </div>
          </div>
        </div>

        {/* Recruitment */}
        <div className="mt-16 bg-gray-50 rounded-2xl p-8 md:p-12 text-center">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">Tham gia ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i</h3>
          <p className="text-gray-600 mb-8 max-w-2xl mx-auto">
            Ch√∫ng t√¥i lu√¥n t√¨m ki·∫øm nh·ªØng t√†i nƒÉng m·ªõi ƒë·ªÉ gia nh·∫≠p ƒë·ªôi ng≈©. N·∫øu b·∫°n c√≥ ƒëam m√™ v·ªõi xe
            m√°y v√† mu·ªën ph√°t tri·ªÉn s·ª± nghi·ªáp, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i.
          </p>

          <div className="grid md:grid-cols-3 gap-6 mb-8">
            {[
              {
                title: 'Th·ª£ s·ª≠a ch·ªØa',
                requirements: 'C√≥ kinh nghi·ªám 2+ nƒÉm',
                benefits: 'L∆∞∆°ng 12-20 tri·ªáu + th∆∞·ªüng',
              },
              {
                title: 'Nh√¢n vi√™n t∆∞ v·∫•n',
                requirements: 'Giao ti·∫øp t·ªët, nhi·ªát t√¨nh',
                benefits: 'L∆∞∆°ng 8-15 tri·ªáu + hoa h·ªìng',
              },
              {
                title: 'Th·ª±c t·∫≠p sinh',
                requirements: 'ƒêang h·ªçc ngh·ªÅ ho·∫∑c m·ªõi t·ªët nghi·ªáp',
                benefits: 'ƒê√†o t·∫°o mi·ªÖn ph√≠ + h·ªó tr·ª£',
              },
            ].map((job, index) => (
              <div key={index} className="bg-white p-6 rounded-xl border border-gray-200">
                <h4 className="font-semibold text-gray-900 mb-2">{job.title}</h4>
                <p className="text-sm text-gray-600 mb-2">{job.requirements}</p>
                <p className="text-sm text-primary-600 font-medium">{job.benefits}</p>
              </div>
            ))}
          </div>

          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="tel:0338037868" className="btn btn-primary">
              G·ªçi tuy·ªÉn d·ª•ng: 033-803-7868
            </a>
            <a href="mailto:suaxehonghau@gmail.com" className="btn btn-outline">
              G·ª≠i CV qua email
            </a>
          </div>
        </div>
      </div>
    </section>
  );
}
