'use client';

import { useState } from 'react';

const certifications = [
  {
    id: 1,
    name: 'Gi·∫•y ph√©p Kinh doanh',
    issuer: 'S·ªü K·∫ø ho·∫°ch v√† ƒê·∫ßu t∆∞ TP.HCM',
    number: '0123456789',
    issueDate: '15/03/2013',
    validUntil: 'V√¥ th·ªùi h·∫°n',
    description: 'Gi·∫•y ph√©p kinh doanh h·ª£p ph√°p cho ho·∫°t ƒë·ªông s·ª≠a ch·ªØa xe m√°y',
    category: 'legal',
    icon: 'üìã',
    verified: true,
  },
  {
    id: 2,
    name: 'Ch·ª©ng nh·∫≠n ISO 9001:2015',
    issuer: 'Bureau Veritas Vietnam',
    number: 'VN-ISO-2018-001',
    issueDate: '20/06/2018',
    validUntil: '20/06/2027',
    description: 'Ch·ª©ng nh·∫≠n h·ªá th·ªëng qu·∫£n l√Ω ch·∫•t l∆∞·ª£ng qu·ªëc t·∫ø',
    category: 'quality',
    icon: 'üèÜ',
    verified: true,
  },
  {
    id: 3,
    name: 'ƒê·∫°i l√Ω ·ªßy quy·ªÅn Honda',
    issuer: 'Honda Vi·ªát Nam',
    number: 'HVN-DA-2019-089',
    issueDate: '10/01/2019',
    validUntil: '10/01/2026',
    description: 'ƒê∆∞·ª£c ·ªßy quy·ªÅn s·ª≠a ch·ªØa v√† cung c·∫•p ph·ª• t√πng ch√≠nh h√£ng Honda',
    category: 'partner',
    icon: 'ü§ù',
    verified: true,
  },
  {
    id: 4,
    name: 'ƒê·∫°i l√Ω ·ªßy quy·ªÅn Yamaha',
    issuer: 'Yamaha Motor Vi·ªát Nam',
    number: 'YMV-SP-2020-156',
    issueDate: '05/04/2020',
    validUntil: '05/04/2025',
    description: 'ƒê·ªëi t√°c ch√≠nh th·ª©c cung c·∫•p d·ªãch v·ª• v√† ph·ª• t√πng Yamaha',
    category: 'partner',
    icon: 'ü§ù',
    verified: true,
  },
  {
    id: 5,
    name: 'Ch·ª©ng ch·ªâ An to√†n Lao ƒë·ªông',
    issuer: 'S·ªü Lao ƒë·ªông - Th∆∞∆°ng binh v√† X√£ h·ªôi',
    number: 'ATVSLƒê-2021-0789',
    issueDate: '12/07/2021',
    validUntil: '12/07/2024',
    description: 'ƒê·∫£m b·∫£o an to√†n lao ƒë·ªông cho nh√¢n vi√™n v√† kh√°ch h√†ng',
    category: 'safety',
    icon: 'üõ°Ô∏è',
    verified: true,
  },
  {
    id: 6,
    name: 'Ch·ª©ng nh·∫≠n Castrol Professional',
    issuer: 'Castrol Vietnam',
    number: 'CP-VN-2022-445',
    issueDate: '18/09/2022',
    validUntil: '18/09/2025',
    description: 'Chuy√™n gia v·ªÅ d·∫ßu nh·ªõt v√† b·∫£o d∆∞·ª°ng ƒë·ªông c∆°',
    category: 'technical',
    icon: 'üõ¢Ô∏è',
    verified: true,
  },
  {
    id: 7,
    name: 'Ch·ª©ng ch·ªâ M√¥i tr∆∞·ªùng',
    issuer: 'S·ªü T√†i nguy√™n v√† M√¥i tr∆∞·ªùng',
    number: 'MT-HCM-2023-234',
    issueDate: '03/02/2023',
    validUntil: '03/02/2028',
    description: 'Cam k·∫øt b·∫£o v·ªá m√¥i tr∆∞·ªùng trong ho·∫°t ƒë·ªông kinh doanh',
    category: 'environment',
    icon: 'üå±',
    verified: true,
  },
  {
    id: 8,
    name: 'Gi·∫£i th∆∞·ªüng D·ªãch v·ª• Uy t√≠n',
    issuer: 'Hi·ªáp h·ªôi Th∆∞∆°ng m·∫°i TP.HCM',
    number: 'DVUT-2023-089',
    issueDate: '15/12/2023',
    validUntil: 'N/A',
    description: 'ƒê∆∞·ª£c c√¥ng nh·∫≠n l√† doanh nghi·ªáp d·ªãch v·ª• uy t√≠n nƒÉm 2023',
    category: 'award',
    icon: 'üèÖ',
    verified: true,
  },
];

const categories = [
  { id: 'all', name: 'T·∫•t c·∫£', count: certifications.length },
  {
    id: 'legal',
    name: 'Ph√°p l√Ω',
    count: certifications.filter((c) => c.category === 'legal').length,
  },
  {
    id: 'quality',
    name: 'Ch·∫•t l∆∞·ª£ng',
    count: certifications.filter((c) => c.category === 'quality').length,
  },
  {
    id: 'partner',
    name: 'ƒê·ªëi t√°c',
    count: certifications.filter((c) => c.category === 'partner').length,
  },
  {
    id: 'technical',
    name: 'K·ªπ thu·∫≠t',
    count: certifications.filter((c) => c.category === 'technical').length,
  },
  {
    id: 'safety',
    name: 'An to√†n',
    count: certifications.filter((c) => c.category === 'safety').length,
  },
  {
    id: 'environment',
    name: 'M√¥i tr∆∞·ªùng',
    count: certifications.filter((c) => c.category === 'environment').length,
  },
  {
    id: 'award',
    name: 'Gi·∫£i th∆∞·ªüng',
    count: certifications.filter((c) => c.category === 'award').length,
  },
];

const VerifiedIcon = () => (
  <svg className="w-5 h-5 text-success-500" fill="currentColor" viewBox="0 0 24 24">
    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" />
  </svg>
);

const CalendarIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
    />
  </svg>
);

const DocumentIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
    />
  </svg>
);

const EyeIcon = () => (
  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
    />
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
    />
  </svg>
);

export default function CertificationsSection() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedCert, setSelectedCert] = useState<number | null>(null);

  const filteredCertifications =
    selectedCategory === 'all'
      ? certifications
      : certifications.filter((cert) => cert.category === selectedCategory);

  const getCategoryColor = (category: string) => {
    const colors = {
      legal: 'from-blue-500 to-blue-600',
      quality: 'from-green-500 to-green-600',
      partner: 'from-purple-500 to-purple-600',
      technical: 'from-orange-500 to-orange-600',
      safety: 'from-red-500 to-red-600',
      environment: 'from-teal-500 to-teal-600',
      award: 'from-yellow-500 to-yellow-600',
    };
    return colors[category as keyof typeof colors] || 'from-gray-500 to-gray-600';
  };

  const isExpired = (validUntil: string) => {
    if (validUntil === 'V√¥ th·ªùi h·∫°n' || validUntil === 'N/A') return false;
    const [day, month, year] = validUntil.split('/');
    const expiryDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));
    return expiryDate < new Date();
  };

  return (
    <section className="section bg-gray-50 p-6">
      <div className="container-7xl">
        {/* Section Header */}
        <div className="text-center max-w-3xl mx-auto mb-16">
          <div className="inline-flex items-center space-x-2 bg-success-100 text-success-700 px-4 py-2 rounded-full text-sm font-medium mb-4">
            <span>üèÖ</span>
            <span>Ch·ª©ng ch·ªâ & Gi·∫•y ph√©p</span>
          </div>

          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            ƒê∆∞·ª£c Ch·ª©ng Nh·∫≠n
            <span className="text-primary-600"> Ch·∫•t L∆∞·ª£ng & Uy T√≠n</span>
          </h2>

          <p className="text-lg text-gray-600 leading-relaxed">
            Ch√∫ng t√¥i t·ª± h√†o s·ªü h·ªØu ƒë·∫ßy ƒë·ªß c√°c ch·ª©ng ch·ªâ, gi·∫•y ph√©p c·∫ßn thi·∫øt v√† ƒë∆∞·ª£c c√¥ng nh·∫≠n b·ªüi
            c√°c t·ªï ch·ª©c uy t√≠n.
          </p>
        </div>

        {/* Category Filter */}
        <div className="flex flex-wrap justify-center gap-2 mb-12">
          {categories.map((category) => (
            <button
              key={category.id}
              onClick={() => setSelectedCategory(category.id)}
              className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 ${
                selectedCategory === category.id
                  ? 'bg-primary-500 text-white shadow-md'
                  : 'bg-white text-gray-600 hover:bg-primary-50 hover:text-primary-600 border border-gray-200'
              }`}
            >
              {category.name} ({category.count})
            </button>
          ))}
        </div>

        {/* Certifications Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
          {filteredCertifications.map((cert) => (
            <div
              key={cert.id}
              className={`bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden group cursor-pointer ${
                selectedCert === cert.id ? 'ring-2 ring-primary-500 shadow-lg' : ''
              }`}
              onClick={() => setSelectedCert(selectedCert === cert.id ? null : cert.id)}
            >
              {/* Header */}
              <div
                className={`bg-gradient-to-r ${getCategoryColor(cert.category)} p-6 text-white relative`}
              >
                <div className="flex items-start justify-between">
                  <div className="flex items-center space-x-3">
                    <div className="text-3xl">{cert.icon}</div>
                    <div>
                      <h3 className="font-bold text-lg leading-tight">{cert.name}</h3>
                      <p className="text-white/80 text-sm">{cert.issuer}</p>
                    </div>
                  </div>

                  {cert.verified && (
                    <div className="bg-white/20 backdrop-blur-sm rounded-full p-2">
                      <VerifiedIcon />
                    </div>
                  )}
                </div>

                {/* Status Badge */}
                <div className="absolute top-4 right-4">
                  {isExpired(cert.validUntil) ? (
                    <span className="bg-red-500 text-white px-2 py-1 rounded-full text-xs font-medium">
                      H·∫øt h·∫°n
                    </span>
                  ) : (
                    <span className="bg-green-500 text-white px-2 py-1 rounded-full text-xs font-medium">
                      C√≤n hi·ªáu l·ª±c
                    </span>
                  )}
                </div>
              </div>

              {/* Content */}
              <div className="p-6">
                <p className="text-gray-600 text-sm leading-relaxed mb-4">{cert.description}</p>

                {/* Certificate Details */}
                <div className="space-y-2 text-sm">
                  <div className="flex items-center space-x-2 text-gray-500">
                    <DocumentIcon />
                    <span>S·ªë: {cert.number}</span>
                  </div>
                  <div className="flex items-center space-x-2 text-gray-500">
                    <CalendarIcon />
                    <span>C·∫•p: {cert.issueDate}</span>
                  </div>
                  <div className="flex items-center space-x-2 text-gray-500">
                    <CalendarIcon />
                    <span>H·∫øt h·∫°n: {cert.validUntil}</span>
                  </div>
                </div>

                {/* Expandable Details */}
                <div
                  className={`transition-all duration-300 overflow-hidden ${
                    selectedCert === cert.id ? 'max-h-48 opacity-100 mt-4' : 'max-h-0 opacity-0'
                  }`}
                >
                  <div className="border-t border-gray-200 pt-4">
                    <h4 className="font-semibold text-gray-900 mb-2">Th√¥ng tin chi ti·∫øt:</h4>
                    <div className="bg-gray-50 rounded-lg p-3 text-sm text-gray-600">
                      <p>
                        Ch·ª©ng ch·ªâ n√†y x√°c nh·∫≠n r·∫±ng {cert.issuer.toLowerCase()} ƒë√£ ƒë√°nh gi√° v√† c√¥ng
                        nh·∫≠n ti·ªám s·ª≠a xe H·ªìng H·∫≠u ƒë·∫°t c√°c ti√™u chu·∫©n c·∫ßn thi·∫øt v·ªÅ{' '}
                        {cert.name.toLowerCase()}.
                      </p>
                    </div>

                    <button className="mt-3 flex items-center space-x-2 text-primary-600 hover:text-primary-700 text-sm font-medium">
                      <EyeIcon />
                      <span>Xem b·∫£n g·ªëc</span>
                    </button>
                  </div>
                </div>

                {/* Click indicator */}
                <div className="text-center mt-4 pt-4 border-t border-gray-100">
                  <span className="text-xs text-gray-400">
                    {selectedCert === cert.id ? 'Nh·∫•n ƒë·ªÉ thu g·ªçn' : 'Nh·∫•n ƒë·ªÉ xem chi ti·∫øt'}
                  </span>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Certification Stats */}
        <div className="bg-white rounded-2xl p-8 md:p-12 shadow-sm border border-gray-200">
          <div className="text-center mb-8">
            <h3 className="text-2xl font-bold text-gray-900 mb-4">Th·ªëng k√™ ch·ª©ng ch·ªâ</h3>
            <p className="text-gray-600">T·ªïng quan v·ªÅ c√°c ch·ª©ng ch·ªâ v√† gi·∫•y ph√©p c·ªßa ch√∫ng t√¥i</p>
          </div>

          <div className="grid md:grid-cols-4 gap-6 mb-8">
            <div className="text-center p-6 bg-blue-50 rounded-xl">
              <div className="text-3xl font-bold text-blue-600 mb-2">{certifications.length}</div>
              <div className="text-sm text-blue-700">T·ªïng s·ªë ch·ª©ng ch·ªâ</div>
            </div>

            <div className="text-center p-6 bg-green-50 rounded-xl">
              <div className="text-3xl font-bold text-green-600 mb-2">
                {certifications.filter((c) => !isExpired(c.validUntil)).length}
              </div>
              <div className="text-sm text-green-700">C√≤n hi·ªáu l·ª±c</div>
            </div>

            <div className="text-center p-6 bg-purple-50 rounded-xl">
              <div className="text-3xl font-bold text-purple-600 mb-2">
                {certifications.filter((c) => c.category === 'partner').length}
              </div>
              <div className="text-sm text-purple-700">ƒê·ªëi t√°c ch√≠nh th·ª©c</div>
            </div>

            <div className="text-center p-6 bg-yellow-50 rounded-xl">
              <div className="text-3xl font-bold text-yellow-600 mb-2">
                {certifications.filter((c) => c.category === 'award').length}
              </div>
              <div className="text-sm text-yellow-700">Gi·∫£i th∆∞·ªüng</div>
            </div>
          </div>

          {/* Why Certifications Matter */}
          <div className="border-t border-gray-200 pt-8">
            <h4 className="text-xl font-bold text-gray-900 mb-6 text-center">
              T·∫°i sao ch·ª©ng ch·ªâ quan tr·ªçng?
            </h4>

            <div className="grid md:grid-cols-3 gap-6">
              <div className="text-center">
                <div className="w-16 h-16 bg-primary-100 text-primary-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">üõ°Ô∏è</span>
                </div>
                <h5 className="font-semibold text-gray-900 mb-2">ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng</h5>
                <p className="text-sm text-gray-600">
                  Ch·ª©ng ch·ªâ x√°c nh·∫≠n ch√∫ng t√¥i ƒë√°p ·ª©ng c√°c ti√™u chu·∫©n ch·∫•t l∆∞·ª£ng cao nh·∫•t
                </p>
              </div>

              <div className="text-center">
                <div className="w-16 h-16 bg-success-100 text-success-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">ü§ù</span>
                </div>
                <h5 className="font-semibold text-gray-900 mb-2">Tin c·∫≠y c·ªßa kh√°ch h√†ng</h5>
                <p className="text-sm text-gray-600">
                  Kh√°ch h√†ng c√≥ th·ªÉ y√™n t√¢m v·ªÅ t√≠nh h·ª£p ph√°p v√† uy t√≠n c·ªßa d·ªãch v·ª•
                </p>
              </div>

              <div className="text-center">
                <div className="w-16 h-16 bg-secondary-100 text-secondary-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">‚ö°</span>
                </div>
                <h5 className="font-semibold text-gray-900 mb-2">C·∫£i ti·∫øn li√™n t·ª•c</h5>
                <p className="text-sm text-gray-600">
                  Ch√∫ng t√¥i cam k·∫øt duy tr√¨ v√† n√¢ng cao c√°c ti√™u chu·∫©n ch·ª©ng ch·ªâ
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* Verification Notice */}
        <div className="mt-8 bg-blue-50 border border-blue-200 rounded-xl p-6">
          <div className="flex items-start space-x-4">
            <div className="w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
              <VerifiedIcon />
            </div>
            <div>
              <h4 className="font-semibold text-blue-900 mb-2">X√°c minh ch·ª©ng ch·ªâ</h4>
              <p className="text-sm text-blue-800 mb-4">
                T·∫•t c·∫£ ch·ª©ng ch·ªâ v√† gi·∫•y ph√©p ƒë∆∞·ª£c hi·ªÉn th·ªã ƒë·ªÅu l√† th·∫≠t v√† c√≥ th·ªÉ ƒë∆∞·ª£c x√°c minh.
                Kh√°ch h√†ng c√≥ th·ªÉ y√™u c·∫ßu xem b·∫£n g·ªëc khi ƒë·∫øn ti·ªám.
              </p>
              <div className="flex flex-col sm:flex-row gap-3">
                <a
                  href="tel:0901234567"
                  className="btn btn-sm bg-blue-600 hover:bg-blue-700 text-white"
                >
                  Li√™n h·ªá x√°c minh
                </a>
                <button className="btn btn-sm btn-outline border-blue-300 text-blue-700 hover:bg-blue-50">
                  T·∫£i xu·ªëng danh s√°ch ch·ª©ng ch·ªâ
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
